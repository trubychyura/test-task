{"version":3,"sources":["redux/ducks/products.ts","redux/reducer.ts","redux/store.ts","styled/StyledModal.ts","components/Modal.tsx","styled/StyledProduct.ts","components/Product.tsx","styled/StyledRating.ts","components/RatingStars.tsx","styled/StyledForm.ts","components/Form.tsx","styled/StyledHome.ts","components/Home.tsx","styled/index.ts","App.tsx","index.tsx"],"names":["workerLoadData","watchLoadData","LOAD_DATA","SET_DATA","SUBMIT_FORM","productReducer","state","action","type","payload","data","map","item","asin","id","comments","setData","fetchData","a","fetch","response","json","products","call","put","takeEvery","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","StyledModal","styled","Modal","theme","media","md","lg","StyledImage","Image","StyledDescription","Col","StyledComments","StyledComentHeader","Row","connect","useParams","history","useHistory","product","find","show","Boolean","onHide","push","Header","closeButton","Title","name","Body","as","src","img","ListGroup","comment","i","Item","Container","stars","rating","text","Footer","StyledCol","StyledRow","Product","Link","to","StyledStar","Star","value","hover","color","gold","silver","undefined","StyledRadio","Form","Check","StyledContainer","RatingStars","useState","setHover","Array","_","Math","round","field","Label","htmlFor","onMouseEnter","onMouseLeave","checked","StyledForm","StyledAlert","Alert","StyledButton","Button","initialValues","handleSubmit","onSubmit","values","resetForm","validationSchema","yup","required","moreThan","formik","Group","errors","touched","variant","controlId","Control","placeholder","onChange","handleChange","StyledTitle","loadData","useEffect","App","path","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ffa9b479.chunk.js","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { IComment, IProduct } from '../../types';\n\nexport const LOAD_DATA = 'LOAD_DATA';\nexport const SET_DATA = 'SET_DATA';\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nconst productReducer = (\n  state: IProduct[] = [],\n  action: ProductsActionTypes,\n): IProduct[] => {\n  switch (action.type) {\n    case SET_DATA:\n      return [...action.payload.data];\n    case SUBMIT_FORM:\n      return state.map(\n        (item: IProduct): IProduct => {\n          if (item.asin === action.payload.id) {\n            const comments: IComment[] = [\n              ...item.comments,\n              action.payload.data,\n            ];\n            return { ...item, comments };\n          }\n\n          return item;\n        },\n      );\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;\n\nconst setData = (data: Array<IProduct>): ISetDataAction => ({\n  type: SET_DATA,\n  payload: {\n    data,\n  },\n});\n\nexport const loadData = (): ILoadDataAction => ({\n  type: LOAD_DATA,\n});\n\nexport const handleSubmit = (\n  id: string,\n  data: IComment,\n): IHandleSubmitAction => ({\n  type: SUBMIT_FORM,\n  payload: {\n    data,\n    id,\n  },\n});\n\nconst fetchData = async (): Promise<IProduct[]> => {\n  const response = await fetch('https://demo8413434.mockable.io/');\n  const data = await response.json();\n  return data.products;\n};\n\nfunction* workerLoadData() {\n  const data: IProduct[] = yield call(fetchData);\n\n  yield put(setData(data));\n}\n\nexport function* watchLoadData() {\n  yield takeEvery(LOAD_DATA, workerLoadData);\n}\n\ntype ISetDataAction = {\n  type: typeof SET_DATA;\n  payload: {\n    data: IProduct[];\n  };\n};\n\ntype IHandleSubmitAction = {\n  type: typeof SUBMIT_FORM;\n  payload: {\n    data: IComment;\n    id: string;\n  };\n};\n\nexport type ILoadDataAction = {\n  type: typeof LOAD_DATA;\n};\n\ntype ProductsActionTypes = ISetDataAction | IHandleSubmitAction;\n","import { combineReducers } from 'redux';\n\nimport products from './ducks/products';\n\nconst rootReducer = combineReducers({ products });\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchLoadData } from './ducks/products';\nimport reducer from './reducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(watchLoadData);\n","import styled from 'styled-components';\nimport { Col, Image, Modal, Row } from 'react-bootstrap';\n\nexport const StyledModal = styled(Modal)`\n  @media (max-width: ${({ theme }) => theme.media.md}) {\n    padding: 0 !important;\n  }\n\n  .modal-title {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  .modal-dialog {\n    max-width: 60%;\n    @media (max-width: ${({ theme }) => theme.media.lg}) {\n      max-width: 70%;\n    }\n    @media (max-width: ${({ theme }) => theme.media.md}) {\n      max-width: 90%;\n      margin: auto;\n    }\n  }\n`;\n\nexport const StyledImage = styled(Image)`\n  display: block;\n  max-height: 300px;\n  max-width: 100%;\n  margin: auto;\n`;\n\nexport const StyledDescription = styled(Col)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const StyledComments = styled(Col)`\n  padding: 15px;\n`;\n\nexport const StyledComentHeader = styled(Row)`\n  margin: 0;\n  justify-content: space-between;\n`;\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router';\n\nimport { RatingStars, Form } from '.';\n\nimport { IState, ModalProps, ParamTypes, IProduct } from '../types';\nimport {\n  StyledModal,\n  StyledImage,\n  StyledDescription,\n  StyledComments,\n  StyledComentHeader,\n} from '../styled/StyledModal';\n\nconst Modal: FC<ModalProps> = ({ products }) => {\n  const { id } = useParams<ParamTypes>();\n  const history = useHistory();\n  const product: IProduct | undefined = products.find(\n    (product) => product.asin === id,\n  );\n\n  if (!product) {\n    return null;\n  }\n\n  const hideModal = () => {\n    history.push('/');\n  };\n\n  return (\n    <StyledModal show={Boolean(id)} onHide={hideModal}>\n      <StyledModal.Header closeButton>\n        <StyledModal.Title>{product.name}</StyledModal.Title>\n      </StyledModal.Header>\n      <StyledModal.Body as={Row}>\n        <Col lg='auto'>\n          <StyledImage src={product.img} />\n        </Col>\n        <StyledDescription>\n          <h5>Description:</h5>\n          <p>\n            <span>{product.name}</span>\n          </p>\n        </StyledDescription>\n        <StyledComments lg={12}>\n          <h5>Comments:</h5>\n          <ListGroup>\n            {product.comments.map((comment, i) => (\n              <ListGroup.Item as={Container} key={i}>\n                <StyledComentHeader>\n                  <h6>Unknown user</h6>\n                  <RatingStars stars={comment.rating} />\n                </StyledComentHeader>\n                <p>{comment.text}</p>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </StyledComments>\n      </StyledModal.Body>\n      <StyledModal.Footer>\n        <Form id={id} />\n      </StyledModal.Footer>\n    </StyledModal>\n  );\n};\n\nexport default connect(({ products }: IState) => ({ products }))(Modal);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Col, Image, Row } from 'react-bootstrap';\n\nexport const StyledImage = styled(Image)`\n  max-height: 300px;\n  max-width: 100%;\n  display: block;\n`;\n\nexport const StyledCol = styled(Col)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledRow = styled(Row)`\n  border-bottom: 2px solid gray;\n  padding: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n`;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ProductProps } from '../types';\nimport { StyledCol, StyledImage, StyledRow } from '../styled/StyledProduct';\n\nconst Product: FC<ProductProps> = ({ id, name, img }) => (\n  <StyledRow>\n    <StyledCol>\n      <Link to={`/${id}`}>{name}</Link>\n    </StyledCol>\n    <StyledCol>\n      <StyledImage src={img} />\n    </StyledCol>\n  </StyledRow>\n);\n\nexport default Product;\n","import styled from 'styled-components';\nimport { Star } from '@styled-icons/boxicons-solid/Star';\nimport { Form } from 'react-bootstrap';\nimport { StarProps } from '../types';\n\nexport const StyledStar = styled(Star)<StarProps>`\n  transition: color 200ms;\n  width: 25px;\n  heidth: 25px;\n  ${({ value, rating, hover, theme }) =>\n    value <= (hover || rating)\n      ? `color: ${theme.color.gold};`\n      : `color: ${theme.color.silver};`}\n  ${({ hover }) => hover !== undefined && `cursor: pointer;`}\n\n  @media (max-width: ${({ theme }) => theme.media.md}) {\n    width: 18px;\n    heidht: 18px;\n  }\n`;\n\nexport const StyledRadio = styled(Form.Check)`\n  display: none;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n`;\n","import { FC, useState } from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Form } from 'react-bootstrap';\n\nimport { RatingProps } from '../types';\nimport {\n  StyledContainer,\n  StyledRadio,\n  StyledStar,\n} from '../styled/StyledRating';\n\nconst RatingStars: FC<RatingProps> = ({ name, stars }) => {\n  const [hover, setHover] = useState<number | null>(null);\n\n  if (stars) {\n    return (\n      <StyledContainer>\n        {[...Array(5)].map((_, i) => (\n          <StyledStar value={i + 1} rating={Math.round(stars || 0)} key={i} />\n        ))}\n      </StyledContainer>\n    );\n  }\n\n  return (\n    <StyledContainer>\n      <Field name={name}>\n        {({ field }: FieldProps) =>\n          [...Array(5)].map((_, i) => {\n            let rating: number = i + 1;\n\n            return (\n              <Form.Label htmlFor={`formRadio${i}`} key={i}>\n                <StyledStar\n                  value={rating}\n                  rating={field.value}\n                  hover={hover}\n                  onMouseEnter={() => setHover(rating)}\n                  onMouseLeave={() => setHover(0)}\n                />\n                <StyledRadio\n                  type='radio'\n                  id={`formRadio${i}`}\n                  {...field}\n                  value={rating}\n                  checked={rating === field.value}\n                />\n              </Form.Label>\n            );\n          })\n        }\n      </Field>\n    </StyledContainer>\n  );\n};\n\nexport default RatingStars;\n","import styled from 'styled-components';\nimport { Alert, Button, Form } from 'react-bootstrap';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n`;\n\nexport const StyledAlert = styled(Alert)`\n  font-size: 13px;\n  margin: 5px 0;\n  padding: 5px;\n`;\n\nexport const StyledButton = styled(Button)`\n  padding-left: 30px;\n  padding-right: 30px;\n`;\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\nimport * as yup from 'yup';\n\nimport { RatingStars } from '.';\n\nimport { handleSubmit } from '../redux/ducks/products';\nimport { FormProps, FormikValues } from '../types';\nimport { StyledForm, StyledButton, StyledAlert } from '../styled/StyledForm';\n\nconst initialValues: FormikValues = {\n  comment: '',\n  rating: 0,\n};\n\nconst Form: FC<FormProps> = ({ id, handleSubmit }) => (\n  <Formik\n    initialValues={initialValues}\n    onSubmit={(values, { resetForm }) => {\n      handleSubmit(id, { text: values.comment, rating: values.rating });\n      resetForm();\n    }}\n    validationSchema={yup.object({\n      comment: yup.string().required('Comment is required!'),\n      rating: yup\n        .number()\n        .moreThan(0, \"Product's rate is required!\")\n        .required(\"Product's rate is required!\"),\n    })}\n  >\n    {(formik: FormikProps<FormikValues>) => (\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <StyledForm.Group>\n          <StyledForm.Label>Products's rate:</StyledForm.Label>\n          <RatingStars name='rating' />\n          {formik.errors.rating && formik.touched.rating && (\n            <StyledAlert variant='danger'>{formik.errors.rating}</StyledAlert>\n          )}\n        </StyledForm.Group>\n        <StyledForm.Group controlId='formComment'>\n          <StyledForm.Label>Your comment:</StyledForm.Label>\n          <StyledForm.Control\n            as='textarea'\n            value={formik.values.comment}\n            placeholder='Enter comment'\n            name='comment'\n            onChange={formik.handleChange}\n          />\n          {formik.errors.comment && formik.touched.comment && (\n            <StyledAlert variant='danger'>{formik.errors.comment}</StyledAlert>\n          )}\n        </StyledForm.Group>\n        <StyledButton variant='primary' type='submit'>\n          Send\n        </StyledButton>\n      </StyledForm>\n    )}\n  </Formik>\n);\n\nexport default connect(null, { handleSubmit })(Form);\n","import styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\n\nexport const StyledContainer = styled(Container)`\n  padding: 20px 10px;\n`;\n\nexport const StyledTitle = styled('h1')`\n  text-align: center;\n  padding: 20px;\n`;\n","import { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Product } from '.';\n\nimport { loadData } from '../redux/ducks/products';\nimport { IState, HomeProps } from '../types';\nimport { StyledContainer, StyledTitle } from '../styled/StyledHome';\n\nconst Home: FC<HomeProps> = ({ products, loadData }) => {\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <StyledContainer>\n      <StyledTitle>List of products</StyledTitle>\n      {products.map(({ name, asin, img }) => (\n        <Product id={asin} name={name} img={img} key={asin} />\n      ))}\n    </StyledContainer>\n  );\n};\n\nexport default connect(({ products }: IState) => ({ products }), { loadData })(\n  Home,\n);\n","export const theme = {\n  color: {\n    gold: 'gold',\n    silver: 'silver',\n  },\n  media: {\n    md: '580px',\n    lg: '1000px',\n  },\n};\n","import { FC } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { Modal, Home } from './components';\n\nimport { theme } from './styled';\n\nconst App: FC = () => (\n  <ThemeProvider theme={theme}>\n    <Router>\n      <Route path='/'>\n        <Home />\n      </Route>\n      <Route path='/:id'>\n        <Modal />\n      </Route>\n    </Router>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}