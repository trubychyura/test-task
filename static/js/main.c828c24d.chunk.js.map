{"version":3,"sources":["styled/theme.ts","components/App/App.tsx","styled/StyledModal.ts","components/Modal/Modal.tsx","styled/StyledProduct.ts","components/Product/Product.tsx","styled/StyledRating.ts","components/RatingStars/RatingStars.tsx","utils/api.ts","redux/ducks/products.ts","styled/StyledForm.ts","components/Form/Form.tsx","styled/StyledHome.ts","components/Home/Home.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["theme","color","gold","silver","media","md","lg","App","path","StyledModal","styled","Modal","StyledImage","Image","StyledDescription","Col","StyledComments","StyledComentHeader","Row","connect","products","id","useParams","history","useHistory","product","find","asin","show","Boolean","onHide","push","Header","closeButton","Title","name","Body","as","src","img","ListGroup","comments","map","comment","i","Item","Container","stars","rating","text","Footer","StyledCol","StyledRow","Product","Link","xs","span","order","to","StyledStar","Star","value","hover","undefined","StyledRadio","Form","Check","StyledContainer","RatingStars","useState","setHover","Array","_","Math","round","field","Label","htmlFor","onMouseEnter","onMouseLeave","type","checked","data-testid","fetchData","a","fetch","response","json","data","workerLoadData","watcherLoadData","LOAD_DATA","SET_DATA","SUBMIT_FORM","productReducer","state","action","payload","item","setData","call","put","takeEvery","StyledForm","StyledAlert","Alert","StyledButton","Button","initialValues","handleSubmit","validateOnBlur","onSubmit","values","resetForm","validationSchema","yup","required","moreThan","formik","Group","errors","touched","variant","controlId","Control","placeholder","onChange","handleChange","StyledTitle","loadData","useEffect","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","ReactDOM","render","store","document","getElementById"],"mappings":"kNAWeA,EAXD,CACZC,MAAO,CACLC,KAAM,OACNC,OAAQ,UAEVC,MAAO,CACLC,GAAI,QACJC,GAAI,W,OCcOC,EAbC,kBACd,cAAC,IAAD,CAAeP,MAAOA,EAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,IAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,Y,8DCZKC,EAAcC,YAAOC,IAAPD,CAAH,gYACD,qBAAGV,MAAkBI,MAAMC,MAYzB,qBAAGL,MAAkBI,MAAME,MAG3B,qBAAGN,MAAkBI,MAAMC,MAOvCO,EAAcF,YAAOG,IAAPH,CAAH,0GAOXI,EAAoBJ,YAAOK,IAAPL,CAAH,qGAMjBM,EAAiBN,YAAOK,IAAPL,CAAH,8CAIdO,EAAqBP,YAAOQ,IAAPR,CAAH,6ECyBhBS,eAAQ,kBAA2B,CAAEC,SAA7B,EAAGA,YAAXD,EApDsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9BC,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAgCL,EAASM,MAC7C,SAACD,GAAD,OAAaA,EAAQE,OAASN,KAGhC,IAAKI,EACH,OAAO,KAOT,OACE,eAAChB,EAAD,CAAamB,KAAMC,QAAQR,GAAKS,OALhB,WAChBP,EAAQQ,KAAK,MAIb,UACE,cAACtB,EAAYuB,OAAb,CAAoBC,aAAW,EAA/B,SACE,cAACxB,EAAYyB,MAAb,UAAoBT,EAAQU,SAE9B,eAAC1B,EAAY2B,KAAb,CAAkBC,GAAInB,IAAtB,UACE,cAACH,EAAA,EAAD,CAAKT,GAAG,OAAR,SACE,cAACM,EAAD,CAAa0B,IAAKb,EAAQc,QAE5B,eAACzB,EAAD,WACE,8CACA,4BACE,+BAAOW,EAAQU,YAGnB,eAACnB,EAAD,CAAgBV,GAAI,GAApB,UACE,2CACA,cAACkC,EAAA,EAAD,UACGf,EAAQgB,SAASC,KAAI,SAACC,EAASC,GAAV,OACpB,eAACJ,EAAA,EAAUK,KAAX,CAAgBR,GAAIS,IAApB,UACE,eAAC7B,EAAD,WACE,8CACA,cAAC,EAAD,CAAa8B,MAAOJ,EAAQK,YAE9B,4BAAIL,EAAQM,SALsBL,cAW5C,cAACnC,EAAYyC,OAAb,UACE,cAAC,GAAD,CAAM7B,GAAIA,YC1DLT,EAAcF,YAAOG,IAAPH,CAAH,yFAMXyC,EAAYzC,YAAOK,IAAPL,CAAH,kGAMT0C,EAAY1C,YAAOQ,IAAPR,CAAH,+ECCP2C,GDIW3C,YAAO4C,IAAP5C,CAAH,+CCfW,SAAC,GAAD,IAAGW,EAAH,EAAGA,GAAIc,EAAP,EAAOA,KAAMI,EAAb,EAAaA,IAAb,OAChC,eAACa,EAAD,WACE,cAACD,EAAD,CAAWI,GAAI,CAAEC,KAAM,GAAIC,MAAO,QAAUpD,GAAI,CAAEoD,MAAO,SAAzD,SACE,cAAC,IAAD,CAAMC,GAAE,WAAMrC,GAAd,SAAqBc,MAEvB,cAACgB,EAAD,CAAWI,GAAI,CAAEC,KAAM,GAAIC,MAAO,SAAWpD,GAAI,CAAEoD,MAAO,QAA1D,SACE,cAAC,EAAD,CAAanB,IAAKC,W,kDCPXoB,EAAajD,YAAOkD,IAAPlD,CAAH,gLAInB,gBAAGmD,EAAH,EAAGA,MAAOb,EAAV,EAAUA,OAAQc,EAAlB,EAAkBA,MAAO9D,EAAzB,EAAyBA,MAAzB,MACA,iBAAA6D,IAAUC,GAASd,GACLhD,EAAMC,MAAMC,KACZF,EAAMC,MAAME,OAF1B,QAGA,wBAAyB4D,IAAzB,EAAGD,OAAY,sBAEI,qBAAG9D,MAAkBI,MAAMC,MAMrC2D,EAActD,YAAOuD,IAAKC,MAAZxD,CAAH,8CAIXyD,EAAkBzD,YAAO,MAAPA,CAAH,8CCgCb0D,EA9CsB,SAAC,GAAqB,IAAnBjC,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,MAAY,EAC9BsB,mBAAwB,MADM,mBACjDP,EADiD,KAC1CQ,EAD0C,KAGxD,OAAIvB,EAEA,cAACoB,EAAD,UACG,YAAII,MAAM,IAAI7B,KAAI,SAAC8B,EAAG5B,GAAJ,OACjB,cAACe,EAAD,CAAYE,MAAOjB,EAAI,EAAGI,OAAQyB,KAAKC,MAAM3B,GAAS,IAASH,QAOrE,cAACuB,EAAD,UACE,cAAC,IAAD,CAAOhC,KAAMA,EAAb,SACG,gBAAGwC,EAAH,EAAGA,MAAH,OACC,YAAIJ,MAAM,IAAI7B,KAAI,SAAC8B,EAAG5B,GACpB,IAAII,EAAiBJ,EAAI,EAEzB,OACE,eAAC,IAAKgC,MAAN,CAAYC,QAAO,mBAAcjC,GAAjC,UACE,cAACe,EAAD,CACEE,MAAOb,EACPA,OAAQ2B,EAAMd,MACdC,MAAOA,EACPgB,aAAc,kBAAMR,EAAStB,IAC7B+B,aAAc,kBAAMT,EAAS,MAE/B,cAACN,EAAD,yBACEgB,KAAK,QACL3D,GAAE,mBAAcuB,IACZ+B,GAHN,IAIEd,MAAOb,EACPiC,QAASjC,IAAW2B,EAAMd,MAC1BqB,cAAA,eAAqBtC,QAdkBA,Y,6CC9B5CuC,GAAS,yCAAG,+BAAAC,EAAA,sEACAC,MAAM,oCADN,cACjBC,EADiB,gBAEJA,EAASC,OAFL,cAEjBC,EAFiB,yBAGhBA,EAAKpE,UAHW,2CAAH,qD,aCyDLqE,I,aAMAC,IA5DJC,GAAY,YACZC,GAAW,WACXC,GAAc,cA4BZC,GA1BQ,WAGL,IAFhBC,EAEe,uDAFK,GACpBC,EACe,uCACf,OAAQA,EAAOhB,MACb,KAAKY,GACH,OAAO,YAAII,EAAOC,QAAQT,MAC5B,KAAKK,GACH,OAAOE,EAAMrD,KACX,SAACwD,GACC,GAAIA,EAAKvE,OAASqE,EAAOC,QAAQ5E,GAAI,CACnC,IAAMoB,EAAoB,sBACrByD,EAAKzD,UADgB,CAExBuD,EAAOC,QAAQT,OAEjB,OAAO,2BAAKU,GAAZ,IAAkBzD,aAGpB,OAAOyD,KAGb,QACE,OAAOH,IAMAI,GAAU,SAACX,GAAD,MAA4C,CACjER,KAAMY,GACNK,QAAS,CACPT,UAmBG,SAAUC,KAAV,wEACoB,OADpB,SAC0BW,aAAKjB,IAD/B,OAGL,OAFMK,EADD,gBAGCa,aAAIF,GAAQX,IAHb,wCAMA,SAAUE,KAAV,kEACL,OADK,SACCY,aAAUX,GAAWF,IADtB,wC,uCC9DMc,GAAa7F,YAAOuD,IAAPvD,CAAH,8CAIV8F,GAAc9F,YAAO+F,KAAP/F,CAAH,qFAMXgG,GAAehG,YAAOiG,KAAPjG,CAAH,6ECFnBkG,GAA8B,CAClCjE,QAAS,GACTK,OAAQ,GAmDK7B,eAAQ,KAAM,CAAE0F,aFhBH,SAC1BxF,EACAmE,GAF0B,MAGD,CACzBR,KAAMa,GACNI,QAAS,CACPT,OACAnE,SESWF,EAhDoB,SAAC,GAAD,IAAGE,EAAH,EAAGA,GAAIwF,EAAP,EAAOA,aAAP,OACjC,cAAC,IAAD,CACEC,gBAAgB,EAChBF,cAAeA,GACfG,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBJ,EAAaxF,EAAI,CAAE4B,KAAM+D,EAAOrE,QAASK,OAAQgE,EAAOhE,SACxDiE,KAEFC,iBAAkBC,IAAW,CAC3BxE,QAASwE,MAAaC,SAAS,wBAC/BpE,OAAQmE,MAELE,SAAS,EAAG,+BACZD,SAAS,iCAZhB,SAeG,SAACE,GAAD,OACC,eAACf,GAAD,CAAYQ,SAAUO,EAAOT,aAAc3B,cAAY,OAAvD,UACE,eAACqB,GAAWgB,MAAZ,WACE,cAAChB,GAAW3B,MAAZ,+BACA,cAAC,EAAD,CAAazC,KAAK,WACjBmF,EAAOE,OAAOxE,QAAUsE,EAAOG,QAAQzE,QACtC,cAACwD,GAAD,CAAakB,QAAQ,SAArB,SAA+BJ,EAAOE,OAAOxE,YAGjD,eAACuD,GAAWgB,MAAZ,CAAkBI,UAAU,cAA5B,UACE,cAACpB,GAAW3B,MAAZ,4BACA,cAAC2B,GAAWqB,QAAZ,CACE/D,MAAOyD,EAAON,OAAOrE,QACrBN,GAAG,WACHwF,YAAY,gBACZ1F,KAAK,UACL2F,SAAUR,EAAOS,eAElBT,EAAOE,OAAO7E,SAAW2E,EAAOG,QAAQ9E,SACvC,cAAC6D,GAAD,CAAakB,QAAQ,SAASxC,cAAY,QAA1C,SACGoC,EAAOE,OAAO7E,aAIrB,cAAC+D,GAAD,CAAcgB,QAAQ,UAAU1C,KAAK,SAArC,2BCrDKb,GAAkBzD,YAAOoC,IAAPpC,CAAH,qDAIfsH,GAActH,YAAO,KAAPA,CAAH,uECiBTS,gBAAQ,kBAA2B,CAAEC,SAA7B,EAAGA,YAAuC,CAAE6G,SJoB3C,iBAAwB,CAC9CjD,KAAMW,MIrBOxE,EAfoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAU6G,EAAe,EAAfA,SAK9C,OAJAC,qBAAU,WACRD,MACC,CAACA,IAGF,eAAC,GAAD,WACE,cAACD,GAAD,+BACC5G,EAASsB,KAAI,gBAAGP,EAAH,EAAGA,KAAMR,EAAT,EAASA,KAAMY,EAAf,EAAeA,IAAf,OACZ,cAAC,EAAD,CAASlB,GAAIM,EAAMQ,KAAMA,EAAMI,IAAKA,GAAUZ,Y,mBCXvCwG,GAHKC,aAAgB,CAAEhH,cCEhCiH,GACe,qBAAXC,QACLA,OAAeC,sCAClBC,KAEIC,GAAiBC,eAERC,gBACbC,GACAP,GAAiBQ,aAAgBJ,MAGnCA,GAAeK,IAAIpD,ICTnBqD,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c828c24d.chunk.js","sourcesContent":["const theme = {\n  color: {\n    gold: 'gold',\n    silver: 'silver',\n  },\n  media: {\n    md: '580px',\n    lg: '1000px',\n  },\n};\n\nexport default theme;\n","import { FC } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { Modal, Home } from '..';\n\nimport theme from '../../styled/theme';\n\nconst App: FC = () => (\n  <ThemeProvider theme={theme}>\n    <Router>\n      <Route path='/'>\n        <Home />\n      </Route>\n      <Route path='/:id'>\n        <Modal />\n      </Route>\n    </Router>\n  </ThemeProvider>\n);\n\nexport default App;\n","import styled from 'styled-components';\nimport { Col, Image, Modal, Row } from 'react-bootstrap';\n\nexport const StyledModal = styled(Modal)`\n  @media (max-width: ${({ theme }) => theme.media.md}) {\n    padding: 0 !important;\n  }\n\n  .modal-title {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  .modal-dialog {\n    max-width: 60%;\n    @media (max-width: ${({ theme }) => theme.media.lg}) {\n      max-width: 70%;\n    }\n    @media (max-width: ${({ theme }) => theme.media.md}) {\n      max-width: 90%;\n      margin: auto;\n    }\n  }\n`;\n\nexport const StyledImage = styled(Image)`\n  display: block;\n  max-height: 300px;\n  max-width: 100%;\n  margin: auto;\n`;\n\nexport const StyledDescription = styled(Col)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const StyledComments = styled(Col)`\n  padding: 15px;\n`;\n\nexport const StyledComentHeader = styled(Row)`\n  margin: 0;\n  justify-content: space-between;\n`;\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router';\n\nimport { RatingStars, Form } from '..';\n\nimport { IState, ModalProps, ParamTypes, IProduct } from '../../types';\nimport {\n  StyledModal,\n  StyledImage,\n  StyledDescription,\n  StyledComments,\n  StyledComentHeader,\n} from '../../styled/StyledModal';\n\nexport const Modal: FC<ModalProps> = ({ products }) => {\n  const { id } = useParams<ParamTypes>();\n  const history = useHistory();\n  const product: IProduct | undefined = products.find(\n    (product) => product.asin === id,\n  );\n\n  if (!product) {\n    return null;\n  }\n\n  const hideModal = () => {\n    history.push('/');\n  };\n\n  return (\n    <StyledModal show={Boolean(id)} onHide={hideModal}>\n      <StyledModal.Header closeButton>\n        <StyledModal.Title>{product.name}</StyledModal.Title>\n      </StyledModal.Header>\n      <StyledModal.Body as={Row}>\n        <Col lg='auto'>\n          <StyledImage src={product.img} />\n        </Col>\n        <StyledDescription>\n          <h5>Description:</h5>\n          <p>\n            <span>{product.name}</span>\n          </p>\n        </StyledDescription>\n        <StyledComments lg={12}>\n          <h5>Comments:</h5>\n          <ListGroup>\n            {product.comments.map((comment, i) => (\n              <ListGroup.Item as={Container} key={i}>\n                <StyledComentHeader>\n                  <h6>Unknown user</h6>\n                  <RatingStars stars={comment.rating} />\n                </StyledComentHeader>\n                <p>{comment.text}</p>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </StyledComments>\n      </StyledModal.Body>\n      <StyledModal.Footer>\n        <Form id={id} />\n      </StyledModal.Footer>\n    </StyledModal>\n  );\n};\n\nexport default connect(({ products }: IState) => ({ products }))(Modal);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Col, Image, Row } from 'react-bootstrap';\n\nexport const StyledImage = styled(Image)`\n  max-height: 300px;\n  max-width: 100%;\n  display: block;\n`;\n\nexport const StyledCol = styled(Col)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledRow = styled(Row)`\n  border-bottom: 2px solid gray;\n  padding: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n`;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ProductProps } from '../../types';\nimport { StyledCol, StyledImage, StyledRow } from '../../styled/StyledProduct';\n\nconst Product: FC<ProductProps> = ({ id, name, img }) => (\n  <StyledRow>\n    <StyledCol xs={{ span: 12, order: 'last' }} md={{ order: 'first' }}>\n      <Link to={`/${id}`}>{name}</Link>\n    </StyledCol>\n    <StyledCol xs={{ span: 12, order: 'first' }} md={{ order: 'last' }}>\n      <StyledImage src={img} />\n    </StyledCol>\n  </StyledRow>\n);\n\nexport default Product;\n","import styled from 'styled-components';\nimport { Form } from 'react-bootstrap';\nimport { Star } from '@styled-icons/boxicons-solid/Star';\nimport { StarProps } from '../types';\n\nexport const StyledStar = styled(Star)<StarProps>`\n  transition: color 200ms;\n  width: 25px;\n  heidth: 25px;\n  ${({ value, rating, hover, theme }) =>\n    value <= (hover || rating)\n      ? `color: ${theme.color.gold};`\n      : `color: ${theme.color.silver};`}\n  ${({ hover }) => hover !== undefined && `cursor: pointer;`}\n\n  @media (max-width: ${({ theme }) => theme.media.md}) {\n    width: 18px;\n    heidht: 18px;\n  }\n`;\n\nexport const StyledRadio = styled(Form.Check)`\n  display: none;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n`;\n","import { FC, useState } from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Form } from 'react-bootstrap';\n\nimport { RatingProps } from '../../types';\nimport {\n  StyledContainer,\n  StyledRadio,\n  StyledStar,\n} from '../../styled/StyledRating';\n\nconst RatingStars: FC<RatingProps> = ({ name, stars }) => {\n  const [hover, setHover] = useState<number | null>(null);\n\n  if (stars) {\n    return (\n      <StyledContainer>\n        {[...Array(5)].map((_, i) => (\n          <StyledStar value={i + 1} rating={Math.round(stars || 0)} key={i} />\n        ))}\n      </StyledContainer>\n    );\n  }\n\n  return (\n    <StyledContainer>\n      <Field name={name}>\n        {({ field }: FieldProps) =>\n          [...Array(5)].map((_, i) => {\n            let rating: number = i + 1;\n\n            return (\n              <Form.Label htmlFor={`formRadio${i}`} key={i}>\n                <StyledStar\n                  value={rating}\n                  rating={field.value}\n                  hover={hover}\n                  onMouseEnter={() => setHover(rating)}\n                  onMouseLeave={() => setHover(0)}\n                />\n                <StyledRadio\n                  type='radio'\n                  id={`formRadio${i}`}\n                  {...field}\n                  value={rating}\n                  checked={rating === field.value}\n                  data-testid={`radio${i}`}\n                />\n              </Form.Label>\n            );\n          })\n        }\n      </Field>\n    </StyledContainer>\n  );\n};\n\nexport default RatingStars;\n","import { IProduct } from '../types';\n\nexport const fetchData = async (): Promise<IProduct[] | null> => {\n  const response = await fetch('https://demo8413434.mockable.io/');\n  const data = await response.json();\n  return data.products;\n};\n","import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { fetchData } from '../../utils/api';\nimport { IComment, IProduct } from '../../types';\n\nexport const LOAD_DATA = 'LOAD_DATA';\nexport const SET_DATA = 'SET_DATA';\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nconst productReducer = (\n  state: IProduct[] = [],\n  action: ProductsActionTypes,\n): IProduct[] => {\n  switch (action.type) {\n    case SET_DATA:\n      return [...action.payload.data];\n    case SUBMIT_FORM:\n      return state.map(\n        (item: IProduct): IProduct => {\n          if (item.asin === action.payload.id) {\n            const comments: IComment[] = [\n              ...item.comments,\n              action.payload.data,\n            ];\n            return { ...item, comments };\n          }\n\n          return item;\n        },\n      );\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;\n\nexport const setData = (data: Array<IProduct>): ISetDataAction => ({\n  type: SET_DATA,\n  payload: {\n    data,\n  },\n});\n\nexport const loadData = (): ILoadDataAction => ({\n  type: LOAD_DATA,\n});\n\nexport const handleSubmit = (\n  id: string,\n  data: IComment,\n): IHandleSubmitAction => ({\n  type: SUBMIT_FORM,\n  payload: {\n    data,\n    id,\n  },\n});\n\nexport function* workerLoadData() {\n  const data: IProduct[] = yield call(fetchData);\n\n  yield put(setData(data));\n}\n\nexport function* watcherLoadData() {\n  yield takeEvery(LOAD_DATA, workerLoadData);\n}\n\ntype ISetDataAction = {\n  type: typeof SET_DATA;\n  payload: {\n    data: IProduct[];\n  };\n};\n\ntype IHandleSubmitAction = {\n  type: typeof SUBMIT_FORM;\n  payload: {\n    data: IComment;\n    id: string;\n  };\n};\n\nexport type ILoadDataAction = {\n  type: typeof LOAD_DATA;\n};\n\ntype ProductsActionTypes = ISetDataAction | IHandleSubmitAction;\n","import styled from 'styled-components';\nimport { Alert, Button, Form } from 'react-bootstrap';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n`;\n\nexport const StyledAlert = styled(Alert)`\n  font-size: 13px;\n  margin: 5px 0;\n  padding: 5px;\n`;\n\nexport const StyledButton = styled(Button)`\n  padding-left: 30px;\n  padding-right: 30px;\n`;\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\nimport * as yup from 'yup';\n\nimport { RatingStars } from '..';\n\nimport { handleSubmit } from '../../redux/ducks/products';\nimport { FormProps, FormikValues } from '../../types';\nimport { StyledForm, StyledButton, StyledAlert } from '../../styled/StyledForm';\n\nconst initialValues: FormikValues = {\n  comment: '',\n  rating: 0,\n};\n\nexport const Form: FC<FormProps> = ({ id, handleSubmit }) => (\n  <Formik\n    validateOnBlur={true}\n    initialValues={initialValues}\n    onSubmit={(values, { resetForm }) => {\n      handleSubmit(id, { text: values.comment, rating: values.rating });\n      resetForm();\n    }}\n    validationSchema={yup.object({\n      comment: yup.string().required('Comment is required!'),\n      rating: yup\n        .number()\n        .moreThan(0, \"Product's rate is required!\")\n        .required(\"Product's rate is required!\"),\n    })}\n  >\n    {(formik: FormikProps<FormikValues>) => (\n      <StyledForm onSubmit={formik.handleSubmit} data-testid='form'>\n        <StyledForm.Group>\n          <StyledForm.Label>Products's rate:</StyledForm.Label>\n          <RatingStars name='rating' />\n          {formik.errors.rating && formik.touched.rating && (\n            <StyledAlert variant='danger'>{formik.errors.rating}</StyledAlert>\n          )}\n        </StyledForm.Group>\n        <StyledForm.Group controlId='formComment'>\n          <StyledForm.Label>Your comment:</StyledForm.Label>\n          <StyledForm.Control\n            value={formik.values.comment}\n            as='textarea'\n            placeholder='Enter comment'\n            name='comment'\n            onChange={formik.handleChange}\n          />\n          {formik.errors.comment && formik.touched.comment && (\n            <StyledAlert variant='danger' data-testid='error'>\n              {formik.errors.comment}\n            </StyledAlert>\n          )}\n        </StyledForm.Group>\n        <StyledButton variant='primary' type='submit'>\n          Send\n        </StyledButton>\n      </StyledForm>\n    )}\n  </Formik>\n);\n\nexport default connect(null, { handleSubmit })(Form);\n","import styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\n\nexport const StyledContainer = styled(Container)`\n  padding: 20px 10px;\n`;\n\nexport const StyledTitle = styled('h1')`\n  text-align: center;\n  padding: 20px;\n`;\n","import { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Product } from '..';\n\nimport { loadData } from '../../redux/ducks/products';\nimport { IState, HomeProps } from '../../types';\nimport { StyledContainer, StyledTitle } from '../../styled/StyledHome';\n\nexport const Home: FC<HomeProps> = ({ products, loadData }) => {\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <StyledContainer>\n      <StyledTitle>List of products</StyledTitle>\n      {products.map(({ name, asin, img }) => (\n        <Product id={asin} name={name} img={img} key={asin} />\n      ))}\n    </StyledContainer>\n  );\n};\n\nexport default connect(({ products }: IState) => ({ products }), { loadData })(\n  Home,\n);\n","import { combineReducers } from 'redux';\n\nimport products from './ducks/products';\n\nconst rootReducer = combineReducers({ products });\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducer';\nimport { watcherLoadData } from './ducks/products';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(watcherLoadData);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { App } from './components';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}